<!--
doc/src/sgml/ref/create_role.sgml
PostgreSQL documentation
-->

<refentry id="SQL-CREATEROLE">
<!--==========================orignal english content==========================
 <indexterm zone="sql-createrole">
  <primary>CREATE ROLE</primary>
 </indexterm>
____________________________________________________________________________-->
 <indexterm zone="sql-createrole">
  <primary>CREATE ROLE</primary>
 </indexterm>
 
<!--==========================orignal english content==========================
 <refmeta>
  <refentrytitle>CREATE ROLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>
____________________________________________________________________________-->
 <refmeta>
  <refentrytitle>CREATE ROLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - 语言语句</refmiscinfo>
 </refmeta>

<!--==========================orignal english content==========================
 <refnamediv>
  <refname>CREATE ROLE</refname>
  <refpurpose>define a new database role</refpurpose>
 </refnamediv>
____________________________________________________________________________-->
 <refnamediv>
  <refname>CREATE ROLE</refname>
  <refpurpose>定义一个新的数据库角色</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<!--==========================orignal english content==========================
<synopsis>
CREATE ROLE <replaceable class="PARAMETER">name</replaceable> [ [ WITH ] <replaceable class="PARAMETER">option</replaceable> [ ... ] ]

<phrase>where <replaceable class="PARAMETER">option</replaceable> can be:</phrase>

      SUPERUSER | NOSUPERUSER
    | CREATEDB | NOCREATEDB
    | CREATEROLE | NOCREATEROLE
    | INHERIT | NOINHERIT
    | LOGIN | NOLOGIN
    | REPLICATION | NOREPLICATION
    | BYPASSRLS | NOBYPASSRLS
    | CONNECTION LIMIT <replaceable class="PARAMETER">connlimit</replaceable>
    | [ ENCRYPTED ] PASSWORD '<replaceable class="PARAMETER">password</replaceable>'
    | VALID UNTIL '<replaceable class="PARAMETER">timestamp</replaceable>'
    | IN ROLE <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | IN GROUP <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | ROLE <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | ADMIN <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | USER <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | SYSID <replaceable class="PARAMETER">uid</replaceable>
</synopsis>
____________________________________________________________________________-->
<synopsis>
CREATE ROLE <replaceable class="PARAMETER">name</replaceable> [ [ WITH ] <replaceable class="PARAMETER">option</replaceable> [ ... ] ]

<phrase>where <replaceable class="PARAMETER">option</replaceable>可以是：</phrase>

      SUPERUSER | NOSUPERUSER
    | CREATEDB | NOCREATEDB
    | CREATEROLE | NOCREATEROLE
    | INHERIT | NOINHERIT
    | LOGIN | NOLOGIN
    | REPLICATION | NOREPLICATION
    | BYPASSRLS | NOBYPASSRLS
    | CONNECTION LIMIT <replaceable class="PARAMETER">connlimit</replaceable>
    | [ ENCRYPTED ] PASSWORD '<replaceable class="PARAMETER">password</replaceable>'
    | VALID UNTIL '<replaceable class="PARAMETER">timestamp</replaceable>'
    | IN ROLE <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | IN GROUP <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | ROLE <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | ADMIN <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | USER <replaceable class="PARAMETER">role_name</replaceable> [, ...]
    | SYSID <replaceable class="PARAMETER">uid</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Description</title>
____________________________________________________________________________-->
  <title>描述</title>

<!--==========================orignal english content==========================
  <para>
   <command>CREATE ROLE</command> adds a new role to a
   <productname>PostgreSQL</productname> database cluster.  A role is
   an entity that can own database objects and have database privileges;
   a role can be considered a <quote>user</>, a <quote>group</>, or both
   depending on how it is used.  Refer to
   <xref linkend="user-manag"> and <xref
   linkend="client-authentication"> for information about managing
   users and authentication.  You must have <literal>CREATEROLE</>
   privilege or be a database superuser to use this command.
  </para>
____________________________________________________________________________-->
  <para>
   <command>CREATE ROLE</command>向<productname>PostgreSQL</productname>数据库集簇增加一个新的角色。一个角色是一个实体，它可以拥有数据库对象并且拥有数据库特权。根据一个角色如何被使用，它可以被考虑成一个<quote>用户</>、一个<quote>组</>或者两者。有关管理用户和认证的信息可以参考<xref linkend="user-manag">和<xref linkend="client-authentication">。要使用这个命令，你必须具有<literal>CREATEROLE</>特权或者成为一个数据库超级用户。
  </para>

<!--==========================orignal english content==========================
  <para>
   Note that roles are defined at the database cluster
   level, and so are valid in all databases in the cluster.
  </para>
____________________________________________________________________________-->
  <para>
   注意角色是定义在数据库集簇层面上的，并且因此在集簇中的所有数据库中都可用。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Parameters</title>
____________________________________________________________________________-->
  <title>参数</title>

    <variablelist>
     <varlistentry>
<!--==========================orignal english content==========================
      <term><replaceable class="parameter">name</replaceable></term>
____________________________________________________________________________-->
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The name of the new role.
       </para>
____________________________________________________________________________-->
       <para>
        新角色的名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>SUPERUSER</literal></term>
____________________________________________________________________________-->
      <term><literal>SUPERUSER</literal></term>
<!--==========================orignal english content==========================
      <term><literal>NOSUPERUSER</literal></term>
____________________________________________________________________________-->
      <term><literal>NOSUPERUSER</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        These clauses determine whether the new role is a <quote>superuser</>,
        who can override all access restrictions within the database.
        Superuser status is dangerous and should be used only when really
        needed.  You must yourself be a superuser to create a new superuser.
        If not specified,
        <literal>NOSUPERUSER</literal> is the default.
       </para>
____________________________________________________________________________-->
       <para>
        这些子句决定新角色是否是一个<quote>超级用户</>，它可以越过数据库内的所有访问限制。超级用户状态很危险并且只应该在确实需要时才用。要创建一个新超级用户，你必须自己是一个超级用户。如果没有指定，默认值是<literal>NOSUPERUSER</literal>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>CREATEDB</></term>
____________________________________________________________________________-->
      <term><literal>CREATEDB</></term>
<!--==========================orignal english content==========================
      <term><literal>NOCREATEDB</></term>
____________________________________________________________________________-->
      <term><literal>NOCREATEDB</></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        These clauses define a role's ability to create databases.  If
        <literal>CREATEDB</literal> is specified, the role being
        defined will be allowed to create new databases. Specifying
        <literal>NOCREATEDB</literal> will deny a role the ability to
        create databases. If not specified,
        <literal>NOCREATEDB</literal> is the default.
       </para>
____________________________________________________________________________-->
       <para>
        这些子句定义一个角色创建数据库的能力。如果指定了<literal>CREATEDB</literal>，被定义的角色将被允许创建新的数据库。指定<literal>NOCREATEDB</literal>将否定一个角色创建数据库的能力。如果没有指定，默认值是<literal>NOCREATEDB</literal>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>CREATEROLE</literal></term>
____________________________________________________________________________-->
      <term><literal>CREATEROLE</literal></term>
<!--==========================orignal english content==========================
      <term><literal>NOCREATEROLE</literal></term>
____________________________________________________________________________-->
      <term><literal>NOCREATEROLE</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        These clauses determine whether a role will be permitted to
        create new roles (that is, execute <command>CREATE ROLE</command>).
        A role with <literal>CREATEROLE</literal> privilege can also alter
        and drop other roles.
        If not specified,
        <literal>NOCREATEROLE</literal> is the default.
       </para>
____________________________________________________________________________-->
       <para>
        这些子句决定一个角色是否被允许创建新的角色（也就是执行<command>CREATE ROLE</command>）。一个带有<literal>CREATEROLE</literal>特权的角色也能修改和删除其他角色。如果没有指定，默认值是<literal>NOCREATEROLE</literal>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>INHERIT</literal></term>
____________________________________________________________________________-->
      <term><literal>INHERIT</literal></term>
<!--==========================orignal english content==========================
      <term><literal>NOINHERIT</literal></term>
____________________________________________________________________________-->
      <term><literal>NOINHERIT</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        These clauses determine whether a role <quote>inherits</> the
        privileges of roles it is a member of.
        A role with the <literal>INHERIT</literal> attribute can automatically
        use whatever database privileges have been granted to all roles
        it is directly or indirectly a member of.
        Without <literal>INHERIT</literal>, membership in another role
        only grants the ability to <command>SET ROLE</> to that other role;
        the privileges of the other role are only available after having
        done so.
        If not specified,
        <literal>INHERIT</literal> is the default.
       </para>
____________________________________________________________________________-->
       <para>
        如果新的角色是其他角色的成员，这些子句决定新角色是否从那些角色中<quote>继承</>特权，把新角色作为成员的角色称为新角色的父角色。一个带有<literal>INHERIT</literal>属性的角色能够自动使用已经被授予给其直接或间接父角色的任何数据库特权。如果没有<literal>INHERIT</literal>，在另一个角色中的成员关系只会把<command>SET ROLE</>的能力授予给那个其他角色，只有在这样做后那个其他角色的特权才可用。如果没有指定，默认值是<literal>INHERIT</literal>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>LOGIN</literal></term>
____________________________________________________________________________-->
      <term><literal>LOGIN</literal></term>
<!--==========================orignal english content==========================
      <term><literal>NOLOGIN</literal></term>
____________________________________________________________________________-->
      <term><literal>NOLOGIN</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        These clauses determine whether a role is allowed to log in;
        that is, whether the role can be given as the initial session
        authorization name during client connection.  A role having
        the <literal>LOGIN</literal> attribute can be thought of as a user.
        Roles without this attribute are useful for managing database
        privileges, but are not users in the usual sense of the word.
        If not specified,
        <literal>NOLOGIN</literal> is the default, except when
        <command>CREATE ROLE</> is invoked through its alternative spelling
        <xref linkend="sql-createuser">.
       </para>
____________________________________________________________________________-->
       <para>
        这些子句决定一个角色是否被允许登录，也就是在客户端连接期间该角色是否能被给定为初始会话认证名称。一个具有<literal>LOGIN</literal>属性的角色可以被考虑为一个用户。没有这个属性的角色对于管理数据库特权很有用，但是却不是用户这个词的通常意义。如果没有指定，默认值是<literal>NOLOGIN</literal>，不过当<command>CREATE ROLE</>被通过<xref linkend="sql-createuser">调用时默认值会是<literal>LOGIN</literal>。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>REPLICATION</literal></term>
____________________________________________________________________________-->
      <term><literal>REPLICATION</literal></term>
<!--==========================orignal english content==========================
      <term><literal>NOREPLICATION</literal></term>
____________________________________________________________________________-->
      <term><literal>NOREPLICATION</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        These clauses determine whether a role is a replication role.  A role
        must have this attribute (or be a superuser) in order to be able to
        connect to the server in replication mode (physical or logical
        replication) and in order to be able to create or drop replication
        slots.
        A role having the <literal>REPLICATION</> attribute is a very
        highly privileged role, and should only be used on roles actually
        used for replication. If not specified,
        <literal>NOREPLICATION</literal> is the default.
       </para>
____________________________________________________________________________-->
       <para>
        这些子句确定角色是否是复制角色。角色必须具有此属性（或成为超级用户）
		才能以复制模式（物理或逻辑复制）连接到服务器，和能够创建或删除复制插槽。
		一个具有<literal>REPLICATION</>属性的角色是一个具有非常高特权的角色，
		并且只应被用于确实需要复制的角色上。如果没有指定，默认值是
		<literal>NOREPLICATION</literal>。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>BYPASSRLS</literal></term>
____________________________________________________________________________-->
      <term><literal>BYPASSRLS</literal></term>
<!--==========================orignal english content==========================
      <term><literal>NOBYPASSRLS</literal></term>
____________________________________________________________________________-->
      <term><literal>NOBYPASSRLS</literal></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        These clauses determine whether a role bypasses every row-level
        security (RLS) policy.  <literal>NOBYPASSRLS</literal> is the default.
        Note that pg_dump will set <literal>row_security</literal> to
        <literal>OFF</literal> by default, to ensure all contents of a table are
        dumped out.  If the user running pg_dump does not have appropriate
        permissions, an error will be returned.  The superuser and owner of the
        table being dumped always bypass RLS.
       </para>
____________________________________________________________________________-->
       <para>
        这些子句决定是否一个角色可以绕过每一条行级安全性（RLS）策略。
        默认是<literal>NOBYPASSRLS</literal>。注意 pg_dump 将默认
        把<literal>row_security</literal>设置为<literal>OFF</literal>，
        以确保一个表的所有内容被转储出来。如果运行 pg_dump 的用户不
        具有适当的权限，将会返回一个错误。超级用户和被转储表的拥有者
        总是可以绕过 RLS。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>CONNECTION LIMIT</literal> <replaceable class="parameter">connlimit</replaceable></term>
____________________________________________________________________________-->
      <term><literal>CONNECTION LIMIT</literal> <replaceable class="parameter">connlimit</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        If role can log in, this specifies how many concurrent connections
        the role can make.  -1 (the default) means no limit. Note that only
        normal connections are counted towards this limit. Neither prepared
        transactions nor background worker connections are counted towards
        this limit.
       </para>
____________________________________________________________________________-->
       <para>
        如果角色能登录，这指定该角色能建立多少并发连接。-1（默认值）表示无限制。
		请注意，只有正常连接才会计入此限制。预备事务和后台工作连接都不计入此限制。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term>[ <literal>ENCRYPTED</> ] <literal>PASSWORD</> <replaceable class="parameter">password</replaceable></term>
____________________________________________________________________________-->
      <term>[ <literal>ENCRYPTED</> ] <literal>PASSWORD</> <replaceable class="parameter">password</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        Sets the role's password.  (A password is only of use for
        roles having the <literal>LOGIN</literal> attribute, but you
        can nonetheless define one for roles without it.)  If you do
        not plan to use password authentication you can omit this
        option.  If no password is specified, the password will be set
        to null and password authentication will always fail for that
        user.  A null password can optionally be written explicitly as
        <literal>PASSWORD NULL</literal>.
       </para>
____________________________________________________________________________-->
       <para>
        设置角色的口令（口令只对具有<literal>LOGIN</literal>属性的角色有用，但是不管怎样你还是可以为没有该属性的角色定义一个口令）。如果你没有计划使用口令认证，你可以忽略这个选项。如果没有指定口令，口令将被设置为空并且该用户的口令认证总是会失败。也可以用<literal>PASSWORD NULL</literal>显式地写出一个空口令。
       </para>
       <note>
<!--==========================orignal english content==========================
         <para>
           Specifying an empty string will also set the password to null,
           but that was not the case before <productname>PostgreSQL</>
           version 10. In earlier versions, an empty string could be used,
           or not, depending on the authentication method and the exact
           version, and libpq would refuse to use it in any case.
           To avoid the ambiguity, specifying an empty string should be
           avoided.
         </para>
____________________________________________________________________________-->
         <para>
           指定一个空字符串也会将密码设置为null，但在<productname>PostgreSQL</>
		   版本10之前不是这种情况。在早期版本中，可以使用或不使用空字符串，
		   具体取决于认证方法和确切的版本，并且libpq在任何情况下都会拒绝使用它。
		   为避免歧义，应避免指定空字符串。
         </para>
       </note>
<!--==========================orignal english content==========================
       <para>
        The password is always stored encrypted in the system catalogs. The
        <literal>ENCRYPTED</> keyword has no effect, but is accepted for
        backwards compatibility. The method of encryption is determined
        by the configuration parameter <xref linkend="guc-password-encryption">.
        If the presented password string is already in MD5-encrypted or
        SCRAM-encrypted format, then it is stored as-is regardless of
        <varname>password_encryption</> (since the system cannot decrypt
        the specified encrypted password string, to encrypt it in a
        different format).  This allows reloading of encrypted passwords
        during dump/restore.
       </para>
____________________________________________________________________________-->
       <para>
        密码始终以加密方式存储在系统目录中。<literal>ENCRYPTED</>关键字不起作用，
		但为了向后兼容而被接受。加密方法由配置参数<xref linkend="guc-password-encryption">
		确定。如果提供的密码字符串已经以MD5加密或SCRAM加密的格式存在，
		则不管<varname>password_encryption</>如何，它都按原样存储
		（由于系统无法解密指定的加密密码字符串，因此需要以不同的格式对其进行加密）。
		这允许在转储/恢复期间重新加载加密的密码。
       </para>
	   </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>VALID UNTIL</literal> '<replaceable class="parameter">timestamp</replaceable>'</term>
____________________________________________________________________________-->
      <term><literal>VALID UNTIL</literal> '<replaceable class="parameter">timestamp</replaceable>'</term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The <literal>VALID UNTIL</literal> clause sets a date and
        time after which the role's password is no longer valid.  If
        this clause is omitted the password will be valid for all time.
       </para>
____________________________________________________________________________-->
       <para>
        <literal>VALID UNTIL</literal>机制设置一个日期和时间，在该时间点之后角色的口令将会失效。如果这个子句被忽略，那么口令将总是有效。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>IN ROLE</> <replaceable class="parameter">role_name</replaceable></term>
____________________________________________________________________________-->
      <term><literal>IN ROLE</> <replaceable class="parameter">role_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The <literal>IN ROLE</literal> clause lists one or more existing
        roles to which the new role will be immediately added as a new
        member.  (Note that there is no option to add the new role as an
        administrator; use a separate <command>GRANT</> command to do that.)
       </para>
____________________________________________________________________________-->
       <para>
        <literal>IN ROLE</literal>子句列出一个或多个现有的角色，新角色将被立即作为新成员加入到这些角色中（注意没有选项可以把新角色作为一个管理员加入，需要用一个单独的<command>GRANT</>命令来完成）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>IN GROUP</> <replaceable class="parameter">role_name</replaceable></term>
____________________________________________________________________________-->
      <term><literal>IN GROUP</> <replaceable class="parameter">role_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para><literal>IN GROUP</literal> is an obsolete spelling of
        <literal>IN ROLE</>.
       </para>
____________________________________________________________________________-->
       <para><literal>IN GROUP</literal>是<literal>IN ROLE</>的一种已废弃的拼写方式。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>ROLE</> <replaceable class="parameter">role_name</replaceable></term>
____________________________________________________________________________-->
      <term><literal>ROLE</> <replaceable class="parameter">role_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The <literal>ROLE</literal> clause lists one or more existing
        roles which are automatically added as members of the new role.
        (This in effect makes the new role a <quote>group</>.)
       </para>
____________________________________________________________________________-->
       <para>
        <literal>ROLE</literal>子句列出一个或者多个现有角色，它们会被自动作为成员加入到新角色中（这实际上新角色变成了一个<quote>组</>）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>ADMIN</> <replaceable class="parameter">role_name</replaceable></term>
____________________________________________________________________________-->
      <term><literal>ADMIN</> <replaceable class="parameter">role_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The <literal>ADMIN</literal> clause is like <literal>ROLE</literal>,
        but the named roles are added to the new role <literal>WITH ADMIN
        OPTION</>, giving them the right to grant membership in this role
        to others.
       </para>
____________________________________________________________________________-->
       <para>
        <literal>ADMIN</literal>子句与<literal>ROLE</literal>相似，但是被提及的角色被使用<literal>WITH ADMIN OPTION</>加入到新角色中，让它们能够把这个角色中的成员关系授予给其他人。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>USER</> <replaceable class="parameter">role_name</replaceable></term>
____________________________________________________________________________-->
      <term><literal>USER</> <replaceable class="parameter">role_name</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The <literal>USER</literal> clause is an obsolete spelling of
        the <literal>ROLE</> clause.
       </para>
____________________________________________________________________________-->
       <para>
        <literal>USER</literal>子句是<literal>ROLE</>子句的一个已废弃的拼写方式。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--==========================orignal english content==========================
      <term><literal>SYSID</> <replaceable class="parameter">uid</replaceable></term>
____________________________________________________________________________-->
      <term><literal>SYSID</> <replaceable class="parameter">uid</replaceable></term>
      <listitem>
<!--==========================orignal english content==========================
       <para>
        The <literal>SYSID</literal> clause is ignored, but is accepted
        for backwards compatibility.
       </para>
____________________________________________________________________________-->
       <para>
        <literal>SYSID</literal>子句会被忽略，但是会为了向后兼容，还是会接受它。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Notes</title>
____________________________________________________________________________-->
  <title>注解</title>

<!--==========================orignal english content==========================
  <para>
   Use <xref linkend="SQL-ALTERROLE"> to
   change the attributes of a role, and <xref linkend="SQL-DROPROLE">
   to remove a role.  All the attributes
   specified by <command>CREATE ROLE</> can be modified by later
   <command>ALTER ROLE</> commands.
  </para>
____________________________________________________________________________-->
  <para>
   使用<xref linkend="SQL-ALTERROLE">来更改一个角色的属性，以及使用<xref linkend="SQL-DROPROLE">来移除一个角色。所有用<command>CREATE ROLE</>指定的属性可以被后来的<command>ALTER ROLE</>命令所修改。
  </para>

<!--==========================orignal english content==========================
  <para>
   The preferred way to add and remove members of roles that are being
   used as groups is to use
   <xref linkend="SQL-GRANT"> and
   <xref linkend="SQL-REVOKE">.
  </para>
____________________________________________________________________________-->
  <para>
   增加和移除组角色成员的最佳方式是使用<xref linkend="SQL-GRANT">和<xref linkend="SQL-REVOKE">。
  </para>

<!--==========================orignal english content==========================
  <para>
   The <literal>VALID UNTIL</> clause defines an expiration time for a
   password only, not for the role <foreignphrase>per se</>.  In
   particular, the expiration time is not enforced when logging in using
   a non-password-based authentication method.
  </para>
____________________________________________________________________________-->
  <para>
   <literal>VALID UNTIL</>子句只为一个口令而不是为一个角色<foreignphrase>本身</>定义了一个过期时间。特别地，当使用一个非基于口令认证的方法登录时，过期时间是不会被强制的。
  </para>

<!--==========================orignal english content==========================
  <para>
   The <literal>INHERIT</> attribute governs inheritance of grantable
   privileges (that is, access privileges for database objects and role
   memberships).  It does not apply to the special role attributes set by
   <command>CREATE ROLE</> and <command>ALTER ROLE</>.  For example, being
   a member of a role with <literal>CREATEDB</> privilege does not immediately
   grant the ability to create databases, even if <literal>INHERIT</> is set;
   it would be necessary to become that role via
   <xref linkend="SQL-SET-ROLE"> before
   creating a database.
  </para>
____________________________________________________________________________-->
  <para>
   <literal>INHERIT</>属性管理可授予特权（也就是对数据库对象和角色成员关系的访问特权）的继承性。它并不适用于由<command>CREATE ROLE</>和<command>ALTER ROLE</>设置的特殊角色属性。例如，作为具有<literal>CREATEDB</>特权的角色的一个成员，并不会立刻授予创建数据库的角色，即便<literal>INHERIT</>被设置也是如此，在创建一个数据库之前必须通过<xref linkend="SQL-SET-ROLE">成为该角色。
  </para>

<!--==========================orignal english content==========================
  <para>
   The <literal>INHERIT</> attribute is the default for reasons of backwards
   compatibility: in prior releases of <productname>PostgreSQL</productname>,
   users always had access to all privileges of groups they were members of.
   However, <literal>NOINHERIT</> provides a closer match to the semantics
   specified in the SQL standard.
  </para>
____________________________________________________________________________-->
  <para>
   <literal>INHERIT</>属性是用于向后兼容原因的默认值：在早前的<productname>PostgreSQL</productname>发布中，用户总是能够访问其所属组的所有特权。不过，<literal>NOINHERIT</>更加接近于 SQL 标准中指定的语义。
  </para>

<!--==========================orignal english content==========================
  <para>
   Be careful with the <literal>CREATEROLE</> privilege. There is no concept of
   inheritance for the privileges of a <literal>CREATEROLE</>-role. That
   means that even if a role does not have a certain privilege but is allowed
   to create other roles, it can easily create another role with different
   privileges than its own (except for creating roles with superuser
   privileges). For example, if the role <quote>user</> has the
   <literal>CREATEROLE</> privilege but not the <literal>CREATEDB</> privilege,
   nonetheless it can create a new role with the <literal>CREATEDB</>
   privilege. Therefore, regard roles that have the <literal>CREATEROLE</>
   privilege as almost-superuser-roles.
  </para>
____________________________________________________________________________-->
  <para>
   要小心<literal>CREATEROLE</>特权。对于一个<literal>CREATEROLE</>角色的特权没有继承的概念。那意味着即使一个角色没有特定的特权但被允许创建其他角色，它可以轻易地创建与自身特权不同的另一个角色（除了创建具有超级用户特权的角色）。例如，如果角色<quote>user</>具有<literal>CREATEROLE</>特权但是没有<literal>CREATEDB</>特权，但是它能够创建一个带有<literal>CREATEDB</>特权的新角色。因此，可以把具有<literal>CREATEROLE</>特权的角色看成是准超级用户角色。
  </para>

<!--==========================orignal english content==========================
  <para>
   <productname>PostgreSQL</productname> includes a program <xref
   linkend="APP-CREATEUSER"> that has
   the same functionality as <command>CREATE ROLE</command> (in fact,
   it calls this command) but can be run from the command shell.
  </para>
____________________________________________________________________________-->
  <para>
   <productname>PostgreSQL</productname>包括一个程序<xref linkend="APP-CREATEUSER">，它具有和<command>CREATE ROLE</command>相同的功能（事实上，它会调用这个命令），但是它可以从命令 shell 中运行。
  </para>

<!--==========================orignal english content==========================
  <para>
   The <literal>CONNECTION LIMIT</> option is only enforced approximately;
   if two new sessions start at about the same time when just one
   connection <quote>slot</> remains for the role, it is possible that
   both will fail.  Also, the limit is never enforced for superusers.
  </para>
____________________________________________________________________________-->
  <para>
   <literal>CONNECTION LIMIT</>只被近似地强制，如果两个新会话在几乎相同时间被开始，而此时该角色只剩下刚好一个连接<quote>槽</>，两者可能都将失败。还有，该限制从不对超级用户强制。
  </para>

<!--==========================orignal english content==========================
  <para>
   Caution must be exercised when specifying an unencrypted password
   with this command.  The password will be transmitted to the server
   in cleartext, and it might also be logged in the client's command
   history or the server log.  The command <xref
   linkend="APP-CREATEUSER">, however, transmits
   the password encrypted.  Also, <xref linkend="app-psql">
   contains a command
   <command>\password</command> that can be used to safely change the
   password later.
  </para>
____________________________________________________________________________-->
  <para>
   用这个命令指定一个非加密口令时必须加以注意。该命令将被以明文的形式传输到服务器，并且它也可能被记录在客户端命令历史或者服务器日志中。不过，命令<xref linkend="APP-CREATEUSER">会传输加密的口令。还有，<xref linkend="app-psql">包含一个命令<command>\password</command>，它可以被用来安全地改变该口令。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Examples</title>
____________________________________________________________________________-->
  <title>例子</title>

<!--==========================orignal english content==========================
  <para>
   Create a role that can log in, but don't give it a password:
<programlisting>
CREATE ROLE jonathan LOGIN;
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   创建一个能登录但是没有口令的角色：
<programlisting>
CREATE ROLE jonathan LOGIN;
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   Create a role with a password:
<programlisting>
CREATE USER davide WITH PASSWORD 'jw8s0F4';
</programlisting>
   (<command>CREATE USER</> is the same as <command>CREATE ROLE</> except
   that it implies <literal>LOGIN</>.)
  </para>
____________________________________________________________________________-->
  <para>
   创建一个有口令的角色：
<programlisting>
CREATE USER davide WITH PASSWORD 'jw8s0F4';
</programlisting>
   （<command>CREATE USER</>和<command>CREATE ROLE</>完全相同，除了它带有<literal>LOGIN</>）。
  </para>

<!--==========================orignal english content==========================
  <para>
   Create a role with a password that is valid until the end of 2004.
   After one second has ticked in 2005, the password is no longer
   valid.

<programlisting>
CREATE ROLE miriam WITH LOGIN PASSWORD 'jw8s0F4' VALID UNTIL '2005-01-01';
</programlisting>
  </para>
____________________________________________________________________________-->
  <para>
   创建一个角色，它的口令有效期截止到 2004 年底。在进入 2005 年第一秒时，该口令会失效。

<programlisting>
CREATE ROLE miriam WITH LOGIN PASSWORD 'jw8s0F4' VALID UNTIL '2005-01-01';
</programlisting>
  </para>

<!--==========================orignal english content==========================
  <para>
   Create a role that can create databases and manage roles:
<programlisting>
CREATE ROLE admin WITH CREATEDB CREATEROLE;
</programlisting></para>
____________________________________________________________________________-->
  <para>
   创建一个能够创建数据库并且管理角色的角色：
<programlisting>
CREATE ROLE admin WITH CREATEDB CREATEROLE;
</programlisting></para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>Compatibility</title>
____________________________________________________________________________-->
  <title>兼容性</title>

<!--==========================orignal english content==========================
  <para>
   The <command>CREATE ROLE</command> statement is in the SQL standard,
   but the standard only requires the syntax
<synopsis>
CREATE ROLE <replaceable class="PARAMETER">name</> [ WITH ADMIN <replaceable class="PARAMETER">role_name</> ]
</synopsis>
   Multiple initial administrators, and all the other options of
   <command>CREATE ROLE</command>, are
   <productname>PostgreSQL</productname> extensions.
  </para>
____________________________________________________________________________-->
  <para>
   SQL 标准中有<command>CREATE ROLE</command>语句，但是标准只要求语法
<synopsis>
CREATE ROLE <replaceable class="PARAMETER">name</> [ WITH ADMIN <replaceable class="PARAMETER">role_name</> ]
</synopsis>
   多个初始管理员以及<command>CREATE ROLE</command>的所有其他选项都是<productname>PostgreSQL</productname>扩展。
   </para>

<!--==========================orignal english content==========================
  <para>
   The SQL standard defines the concepts of users and roles, but it
   regards them as distinct concepts and leaves all commands defining
   users to be specified by each database implementation.  In
   <productname>PostgreSQL</productname> we have chosen to unify
   users and roles into a single kind of entity.  Roles therefore
   have many more optional attributes than they do in the standard.
  </para>
____________________________________________________________________________-->
  <para>
   SQL 标准定义了用户和角色的概念，但是它把它们看成是可区分的概念并且将定义用户的所有命令留给每一种数据库实现来指定。在<productname>PostgreSQL</productname>中，我们已经选择把用户和角色统一成一种单一实体类型。因此角色比起标准中拥有更多可选的属性。
  </para>

<!--==========================orignal english content==========================
  <para>
   The behavior specified by the SQL standard is most closely approximated
   by giving users the <literal>NOINHERIT</> attribute, while roles are
   given the <literal>INHERIT</> attribute.
  </para>
____________________________________________________________________________-->
  <para>
   SQL 标准指定的行为可以通过给用户<literal>NOINHERIT</>属性来得到最大的金丝，而角色会被给予<literal>INHERIT</>属性。
  </para>
 </refsect1>

 <refsect1>
<!--==========================orignal english content==========================
  <title>See Also</title>
____________________________________________________________________________-->
  <title>参见</title>

  <simplelist type="inline">
   <member><xref linkend="sql-set-role"></member>
   <member><xref linkend="sql-alterrole"></member>
   <member><xref linkend="sql-droprole"></member>
   <member><xref linkend="sql-grant"></member>
   <member><xref linkend="sql-revoke"></member>
   <member><xref linkend="app-createuser"></member>
  </simplelist>
 </refsect1>
</refentry>
